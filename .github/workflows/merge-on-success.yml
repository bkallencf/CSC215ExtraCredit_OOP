name: Merge PR into student branch

on:
  workflow_run:
    workflows: ["Autograder"]
    types:
      - completed

jobs:
  merge-to-username-branch:
    name: Merge PR into student's branch
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
      pull-requests: write
    env:
      SEMESTER_PREFIX: "2025-fall"

    steps:
      - name: Checkout base repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          token: ${{ secrets.REPO_PUSH_TOKEN }}

      - name: Get PR info
        id: prinfo
        run: |
          echo "username=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
          echo "head_ref=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT

      - name: Create new branch and force push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"

          BRANCH="${{ env.SEMESTER_PREFIX }}-${{ steps.prinfo.outputs.username }}"
          git fetch origin ${{ github.event.workflow_run.head_ref }}
          git checkout -b "$BRANCH" "origin/${{ github.event.workflow_run.head_ref }}"
          git push --force origin "$BRANCH"

      - name: Merge PR head into new branch
        uses: actions/github-script@v7
        with:
          script: |
            const username = "${{ steps.prinfo.outputs.username }}";
            const headRef = "${{ github.event.workflow_run.head_ref }}";
            const baseBranch = `${process.env.SEMESTER_PREFIX}-${username}`;

            await github.rest.repos.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: baseBranch,
              head: headRef,
              commit_message: `Auto-merged PR #${context.payload.pull_request.number} into ${baseBranch}`
            });
